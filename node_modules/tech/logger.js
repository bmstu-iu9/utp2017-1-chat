var fs = require('fs');
var config = require('config');

/**
 * Logger, which can write information in different ways.
 */

exports.debug = function() {
    var str = "";
    for (var i = 0; i < arguments.length; i++) {
        if (arguments[i] == null)
            str += "null ";
        else if (arguments[i].toString() == "[object Object]") {
            try {
                str += (JSON.stringify(arguments[i]) + ' ')
            } catch (err) {
                error("LOGGER_ERROR: " + err);
            }
        } else if (arguments[i] == undefined)
            str += "undefined ";
        else
            str += (arguments[i].toString() + ' ');
    }
    if (config.MODE === 'develop') {
        if (config.PATH_LOG === 'console')
            console.log("\x1b[46mdebug\x1b[46m:\x1b[0m", str);
        else {
            fs.writeFile(config.PATH_LOG, str, 'utf-8', function(err) {
                if (err)
                    console.log("Some trouble in logger(debug)");
            });
        }
    }
};

exports.info = function() {
    var str = "";
    for (var i = 0; i < arguments.length; i++) {
        if (arguments[i] == null)
            str += "null ";
        else if (arguments[i].toString() == "[object Object]") {
            try {
                str += (JSON.stringify(arguments[i], '', 4) + ' ')
            } catch (err) {
                error("LOGGER_ERROR: " + err);
            }
        } else if (arguments[i] == undefined)
            str += "undefined ";
        else
            str += (arguments[i].toString() + ' ');
    }
    if (config.PATH_LOG === 'console') {
        console.log("\x1b[42minfo\x1b[42m:\x1b[0m" +
            " \x1b[33m%s\x1b[33m \x1b[0m ", str);
    }
    else {
        str = 'info:' + str;
        fs.writeFile(config.PATH_LOG, str, 'utf-8', function (err) {
            if (err)
                console.log("Some trouble in logger(debug)");
        });
    }
};

exports.error = function() {
    var str = "";
    for (var i = 0; i < arguments.length; i++) {
        if (arguments[i] == null)
            str += "null ";
        else if (arguments[i].toString() == "[object Object]") {
            try {
                str += (JSON.stringify(arguments[i]) + ' ')
            } catch (err) {
                error("LOGGER_ERROR: " + err);
            }
        } else if (arguments[i] == undefined)
            str += "undefined ";
        else
            str += (arguments[i].toString() + ' ');
    }
    if (config.PATH_LOG === 'console') {
        console.log("\x1b[45merror\x1b[45m:\x1b[31m%s\x1b[31m \x1b[0m", str);
    }
    else {
        str = 'error:' + str;
        fs.writeFile(config.PATH_LOG, str, 'utf-8', function (err) {
            if (err)
                console.log("Some trouble in logger(debug)");
        });
    }
};
